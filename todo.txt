basic unit of data is a piece
a piece has a type: (official, commission, fan-created)
a piece has tags
a piece can have upto 1 canonical media (txt, png, jpeg, etc)
a piece can have drafts
    a draft has a piece of media attached and some metadata
a piece can have raws
    a raw has a piece of media attached and some metadata
a piece can have variants
    a variant has a piece of media attached and some metadata
    each variant can have additional tags which are union'd with the piece's tags
a piece can have a price:
    a base price
    a tip

a media has
    a date added
    optionally a list of links to sources
    rating: safe, tasteful, explicit

basic tag info is
    a name
    a description

a tag when associated with piece has
    optionally a category

starting categories are:
    character:
    artist:
    (none):

categories have:
    a color
    a description
    


- implement multiple blob view for pieces
    - click to zoom
- implement double-right click back and forth navigation 
- implement saving data to disk
- move to message passing system
- remove image tooltips, replace them with piece name (info?) tool tips
- reorg gui code
- implement adding blobs via an Add button in each category
- implement left right navigation when zoomed in on a blob
- abstract all relevant gui code pertaining to db items
- better image/thumbnail loading
- add multiple blob loading
    - handle undo checkpointing properly
- create date editor widget
- switch to dates over datetimes for data?
- implement saving images to files on disk rather than storing in one file
    - file name = format!("[{}] {}", blob_id, blob.filename)
- move modes to structs that impl a trait, that render two windows, main and sidebar
    - they return a new mode if any to switch to after the render ends
- create blob editing
- create gui_stack, to move back and forth between locations [gallery, piece view, tag list, etc], where double right click pops off the stack
- blob:
    - delete
    - edit
- add menu item to clean folder of items that arent the DB or items contained therein
- make clean blobs remove unassociated blobs
- tooltips and help screen
    - add more info to the help screen
    - add a menu item for help that brings up the help screen
    X add tooltips to every field [will get user feedback to see if this is necessary]
- upload to github
- enable auto updater
- build binaries
    - build them without any tagging showing, and temporarily remove the search bar
- release on github
- startup message indicating the user needs to set a default database directory
- add new database/load database file options
    - auto set default database to most recently loaded
- bug check on image loading
    -fixed
- release on twitter 
- implement creating tags
- implement editing tags
- implement viewing tag list
- implement categories
- implement adding tags
- category colors
- handle PSD/CLIP files properly
    - replace "Loading..." with the filename?
- ADD ALL MY MEDIA TO THIS AND MOVE IT INTO MY BACKED UP FOLDER
    - undownloaded skeb commissions
    - vermillion dice
    - chou
    - sunnypoppy
    - 46snowy
- open tags from piece page
x add button to add default categories
    - instead make the add tag button separate for each category
    - yumi commissions
    - miu commissions
    - emotes (grouped in a single piece)
- clipboard for images AND text
    - text
    - images
- optimize to only load thumbnails, and load bigger images on demand

v0.2 milestone
- link category in tag to category page
- save image to file
- change to using iter tools wherever possible
    - specifically the sorted by




v0.3 and beyond
- try something different for confirming editing.
- reorganize query-ing mechanism for easier to define queries
- implement searching
- implement hyperlinks
- add context menus to edit blobs in the piece screen
- add a statistics screen
    - allow it to take a search to filter data
- add a settings screen
- switch to tables api
- allow user to add contextual shell commands via the settings screen
- add config/settings info to allow user to change style
- think about removing media type?
- markdown renderer
- clipboard support



tag syntax:
tag = [a-zA-Z0-9_()-+]+

search syntax
search_list = item -> (" " -> item)*
item = grouped | or_list | single

single = modifiers? -> tag | date_added | price | source_type | media_type

source_type = "fan" | "official" | "commission"
media_type = "text" | "image"

price = price_op -> number
price_op = ">" | ">=" | ...

date_added = date_op -> date 
date_op = "before" | "after" | "on"

date = anything chrono can parse

modifiers = "-" 

or_list = single -> ("|" -> item)+

grouped = "(" -> search_list -> ")"


pub struct Condition {
    negate: bool,
    tests: Tests,
}

enum Tests {
    And(Vec<Condition>)
    Or(Vec<Condition>)
    Single(Test),
    
}

pub enum Test {
    Tag(Tag),
    Source(SourceType),
    Media(MediaType),
    DateAdded(DateOp, DateTime<Local>),
    Price(PriceOp, u32),
}

